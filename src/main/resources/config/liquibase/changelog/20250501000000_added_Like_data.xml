<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
    <!--
        Add 1 million records in batches using SQL instead of CSV loading
        This is much more efficient for large data sets
        
        IMPORTANT: This will only run when you specifically include the "bulk-data" context
        For example: ./mvnw liquibase:update -Dliquibase.contexts=bulk-data
    -->
    <!-- Batch 1: Records 1-100K -->
    <changeSet id="20250619143733-3" author="jhipster" context="faker">
        <comment>Loading bulk data for likes on reels and comments (Microservice corrected) - 2M records</comment>
        <sql>
        INSERT IGNORE INTO jhi_like (id, parent_id, parent_type, user_id, created_at)
        -- Part 1: Generate 1.5 million likes for Reels (assuming random parent IDs)
        SELECT
            UUID() as id,
            UUID() as parent_id, -- Randomly generated Reel ID
            'reel' as parent_type,
            UUID() as user_id,
            DATE_SUB(NOW(), INTERVAL FLOOR(1 + RAND() * 100000) MINUTE) as created_at
        FROM
            (
                SELECT a.N + b.N * 10 + c.N * 100 + d.N * 1000 + e.N * 10000 + f.N * 100000 + 1 as n
                FROM
                    (SELECT 0 as N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) a,
                    (SELECT 0 as N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) b,
                    (SELECT 0 as N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) c,
                    (SELECT 0 as N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) d,
                    (SELECT 0 as N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) e,
                    (SELECT 0 as N UNION SELECT 1) f
                LIMIT 1500000
            ) as numbers
        UNION ALL
        -- Part 2: Generate 500,000 likes for Comments (querying the local comment table)
        SELECT
            UUID() as id,
            c.id as parent_id, -- ID from the local comment table
            'comment' as parent_type,
            UUID() as user_id,
            DATE_ADD(c.created_at, INTERVAL FLOOR(1 + RAND() * 10000) MINUTE) as created_at
        FROM
            comment c
        ORDER BY RAND()
        LIMIT 500000;
    </sql>
        <addUniqueConstraint tableName="jhi_like" columnNames="parent_id, user_id" constraintName="ux_like_parent_user"/>
    </changeSet>
</databaseChangeLog>